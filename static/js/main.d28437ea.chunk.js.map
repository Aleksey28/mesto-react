{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","utils/constants.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/Confirm.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","logo","className","href","src","alt","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","_id","owner","type","onClick","link","name","cn","like__btn_active","likes","some","item","title","reduce","res","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Footer","Date","getFullYear","ImagePopup","isOpen","onClose","PopupWithForm","isLoad","onSubmit","submitStates","children","noValidate","loading","static","propsPopupWithAddForm","propsPopupWithEditForm","propsPopupWithEditAvatarForm","propsPopupWithConfirmForm","EditProfilePopup","isLoading","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","value","placeholder","minLength","maxLength","required","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","apiObject","baseUrl","headers","this","_baseUrl","_headers","relativePath","method","body","options","fetch","response","json","ok","Promise","reject","status","message","_getProxy","_handleResponse","JSON","stringify","like","authorization","Confirm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmOpen","setIsConfirmOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","getCardList","then","data","catch","error","console","log","finally","getUserData","closeAllPopups","Provider","importedLogo","isLiked","toggleCardLike","newCard","newCards","addCard","setUserData","setAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d28437ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.ff16f24b.svg\";","export default function Header({ logo }) {\n  return (\n    <header className=\"header\">\n      <a href=\"#0\">\n        <img src={logo} alt=\"Логотип страницы Место.\" className=\"header__logo\" />\n      </a>\n    </header>\n  );\n}\n","import { createContext } from 'react';\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { useContext } from 'react';\r\nimport cn from 'classnames';\r\n\r\nexport default function Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const handleClick = () => {\r\n    onCardClick(card);\r\n  };\r\n\r\n  const handleClickLike = () => {\r\n    onCardLike(card);\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    onCardDelete(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      {currentUser._id === card.owner._id && (\r\n        <button className=\"card__btn card__btn_action_trush\" type=\"button\" onClick={handleClickDelete}></button>\r\n      )}\r\n\r\n      <img src={card.link} alt={card.name} className=\"card__image\" onClick={handleClick} />\r\n      <div className=\"card__footer\">\r\n        <h3 className=\"card__caption\">{card.name}</h3>\r\n        <div className=\"like card__like\">\r\n          <button\r\n            className={cn('like__btn', { like__btn_active: card.likes.some((item) => item._id === currentUser._id) })}\r\n            onClick={handleClickLike}\r\n            type=\"button\"\r\n          ></button>\r\n          <p className=\"like__count\" title={card.likes.reduce((res, item) => (res += `${item.name}\\n`), '')}>\r\n            {card.likes.length}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport Card from './Card';\r\n\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport default function Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  cards,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <button className=\"profile__btn profile__btn_action_edit-avatar\" onClick={onEditAvatar}>\r\n          <img src={currentUser.avatar} alt=\"Аватар.\" className=\"profile__avatar\" />\r\n          <span className=\"profile__avatar-overlay\"></span>\r\n        </button>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"profile__btn profile__btn_action_edit\" type=\"button\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__about\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__btn profile__btn_action_add\" type=\"button\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => {\r\n            return (\r\n              <Card\r\n                card={item}\r\n                onCardClick={onCardClick}\r\n                onCardLike={onCardLike}\r\n                onCardDelete={onCardDelete}\r\n                key={item._id}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","export default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">@ {new Date().getFullYear()} Попов Алексей</p>\n    </footer>\n  );\n}\n","export default function ImagePopup({ card, isOpen, onClose }) {\n  return (\n    <div className={`popup popup_type_show ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container popup__container_type_show\">\n        <button className=\"popup__btn popup__btn_action_close\" type=\"button\" onClick={onClose}></button>\n        <img src={card.link} alt={card.name} className=\"popup__image\" />\n        <h3 className=\"popup__caption\">{card.name}</h3>\n      </div>\n    </div>\n  );\n}\n","export default function PopupWithForm({ title, name, isOpen, isLoad, onClose, onSubmit, submitStates, children }) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`} name={name}>\r\n      <form className=\"popup__container popup__container_type_form\" name=\"container\" noValidate onSubmit={onSubmit}>\r\n        <button className=\"popup__btn popup__btn_action_close\" type=\"button\" onClick={onClose}></button>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        {children}\r\n        <button className=\"popup__btn popup__btn_action_submit\" type=\"submit\">\r\n          {!isLoad ? submitStates.static : submitStates.loading}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export const propsPopupWithAddForm = {\n  title: 'Новое место',\n  name: 'add',\n  submitStates: {\n    static: 'Создать',\n    loading: 'Создание...',\n  },\n};\nexport const propsPopupWithEditForm = {\n  title: 'Редактировать профиль',\n  name: 'edit',\n  submitStates: {\n    static: 'Сохранить',\n    loading: 'Сохранение...',\n  },\n};\nexport const propsPopupWithEditAvatarForm = {\n  title: 'Обновить аватар',\n  name: 'edit-avatar',\n  submitStates: {\n    static: 'Сохранить',\n    loading: 'Сохранение...',\n  },\n};\nexport const propsPopupWithConfirmForm = {\n  title: 'Вы уверены?',\n  name: 'confirm',\n  submitStates: {\n    static: 'Да',\n    loading: 'Удаление...',\n  },\n};\n\nexport const validationSettings = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__btn_action_submit',\n  inactiveButtonClass: 'popup__btn__disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n\nexport const apiSettings = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'fcd9a632-5cad-436c-b58e-4c80d498006a',\n    'Content-Type': 'application/json',\n  },\n};\n","import { useState, useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { propsPopupWithEditForm } from '../utils/constants.js';\r\n\r\nexport default function EditProfilePopup({ isOpen, isLoading, onClose, onUpdateUser }) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n    if (!!currentUser.name && !!currentUser.about) {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleChangeName = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const handleChangeDescription = (evt) => {\r\n    setDescription(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditForm.title}\r\n      name={propsPopupWithEditForm.name}\r\n      submitStates={propsPopupWithEditForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_type_name\"\r\n        name=\"name\"\r\n        id=\"edit-name-input\"\r\n        value={name}\r\n        placeholder=\"Заголовок профиля\"\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n        onChange={handleChangeName}\r\n      />\r\n      <span className=\"popup__error\" id=\"edit-name-input-error\"></span>\r\n      <input\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_type_about\"\r\n        name=\"about\"\r\n        id=\"about-input\"\r\n        value={description}\r\n        placeholder=\"Описание профиля\"\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n        onChange={handleChangeDescription}\r\n      />\r\n      <span className=\"popup__error\" id=\"about-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { propsPopupWithEditAvatarForm } from '../utils/constants.js';\r\n\r\nexport default function EditAvatarPopup({ isOpen, isLoading, onClose, onUpdateAvatar }) {\r\n  const avatarRef = useRef();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({\r\n      link: avatarRef.current.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditAvatarForm.title}\r\n      name={propsPopupWithEditAvatarForm.name}\r\n      submitStates={propsPopupWithEditAvatarForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        ref={avatarRef}\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_type_link\"\r\n        name=\"link\"\r\n        id=\"link-input-edit\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"popup__error\" id=\"link-input-edit-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { propsPopupWithAddForm } from '../utils/constants.js';\r\n\r\nexport default function AddPlacePopup({ isOpen, isLoading, onClose, onAddPlace }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  const handleChangeName = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const handleChangeLink = (evt) => {\r\n    setLink(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithAddForm.title}\r\n      name={propsPopupWithAddForm.name}\r\n      submitStates={propsPopupWithAddForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className=\"popup__input popup__input_type_name\"\r\n        name=\"name\"\r\n        id=\"add-name-input\"\r\n        value={name}\r\n        placeholder=\"Название\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        required\r\n        onChange={handleChangeName}\r\n      />\r\n      <span className=\"popup__error\" id=\"add-name-input-error\"></span>\r\n      <input\r\n        type=\"url\"\r\n        className=\"popup__input popup__input_type_link\"\r\n        name=\"link\"\r\n        id=\"link-input-add\"\r\n        value={link}\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n        onChange={handleChangeLink}\r\n      />\r\n      <span className=\"popup__error\" id=\"link-input-add-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { apiSettings } from './constants.js';\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getProxy(relativePath, method, body = '') {\r\n    const options = {\r\n      method,\r\n      headers: this._headers,\r\n    };\r\n\r\n    if (!!body) {\r\n      options.body = body;\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${relativePath}`, options);\r\n  }\r\n\r\n  async _handleResponse(response) {\r\n    const description = await response.json();\r\n\r\n    if (response.ok) {\r\n      return description;\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}\\nОписание: ${description.message}`);\r\n    }\r\n  }\r\n\r\n  async getUserData() {\r\n    const response = await this._getProxy('/users/me', 'GET');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setUserData({ name, about }) {\r\n    const response = await this._getProxy('/users/me', 'PATCH', JSON.stringify({ name, about }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setAvatar({ link }) {\r\n    const response = await this._getProxy('/users/me/avatar', 'PATCH', JSON.stringify({ avatar: link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async getCardList() {\r\n    const response = await this._getProxy('/cards', 'GET');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async addCard({ name, link }) {\r\n    const response = await this._getProxy('/cards', 'POST', JSON.stringify({ name, link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async deleteCard(id) {\r\n    const response = await this._getProxy(`/cards/${id}`, 'DELETE');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async toggleCardLike(id, like) {\r\n    const response = await this._getProxy(`/cards/likes/${id}`, like ? 'PUT' : 'DELETE');\r\n    return await this._handleResponse(response);\r\n  }\r\n}\r\n\r\nexport const apiObject = new Api(apiSettings);\r\n","import PopupWithForm from './PopupWithForm';\r\nimport { propsPopupWithConfirmForm } from '../utils/constants.js';\r\n\r\nexport default function Confirm({ isOpen, isLoading, onClose, onSubmit }) {\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithConfirmForm.title}\r\n      name={propsPopupWithConfirmForm.name}\r\n      submitStates={propsPopupWithConfirmForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport importedLogo from '../images/header-logo.svg';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { apiObject } from '../utils/api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Confirm from './Confirm';\r\n\r\nfunction App() {\r\n  //Создаем стейты\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //Загружаем данные карточек один раз при сборке\r\n  useEffect(() => {\r\n    // setIsLoading(!isLoading);\r\n    apiObject\r\n      .getCardList()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        // setIsLoading(!isLoading);\r\n      });\r\n  }, []);\r\n\r\n  //Загружаем данные пользователя\r\n  useEffect(() => {\r\n    // setIsLoading(!isLoading);\r\n    apiObject\r\n      .getUserData()\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        // setIsLoading(!isLoading);\r\n      });\r\n  }, []);\r\n\r\n  //Обработчик нажатия на аватарку\r\n  const handleEditAvatarClick = () => {\r\n    //Открываем попап редактирования аватара\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку редактирования профиля\r\n  const handleEditProfileClick = () => {\r\n    //Открываем попап редактирования профиля\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку добавления новой карточки\r\n  const handleAddPlaceClick = () => {\r\n    //Открываем попап добавления новой карточки\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на карточку\r\n  const handleCardClick = (card) => {\r\n    //Открываем попап картинки\r\n    setIsImagePopupOpen(true);\r\n    //Устанавливаем выбранную карточку как текущую, для отображения в попапе\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  //Обработчик закрытия всех попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmOpen(false);\r\n    setIsImagePopupOpen(false);\r\n  };\r\n\r\n  //Обработчик обновления данных пользователя\r\n  const handleUpdateUser = (data) => {\r\n    //Отправляем новые данные на сервер\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setUserData(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик обновления аватара\r\n  const handleUpdateAvatar = (data) => {\r\n    //Отправляем новые данные\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setAvatar(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //функция обработчик установки/снятия лайка\r\n  const handleCardLike = (card) => {\r\n    //Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((item) => item._id === currentUser._id);\r\n\r\n    //Отправляем запрос в API и получаем обновленные данные карточки\r\n    apiObject\r\n      .toggleCardLike(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        //формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((item) => (item._id === card._id ? newCard : item));\r\n\r\n        //обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  //функция обработчик удаления карточки\r\n  const handleCardDelete = () => {\r\n    //Отправляем запрос на удаление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .deleteCard(selectedCard._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((item) => item._id !== selectedCard._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик добавления новой карточки\r\n  const handleAddPlace = (card) => {\r\n    //Отправляем запрос на добавление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .addCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку удаления\r\n  const handleClickCardDelete = (card) => {\r\n    //Указываем текущую карточку, чтобы её удалить\r\n    setSelectedCard(card);\r\n    //Закрываем попап\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header logo={importedLogo} />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          cards={cards}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleClickCardDelete}\r\n        />\r\n        <Footer />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} />\r\n\r\n        <Confirm isOpen={isConfirmOpen} isLoading={isLoading} onClose={closeAllPopups} onSubmit={handleCardDelete} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}